#parameters
Parameters:
 ENV:
  Description: Environment Type
  Type: String
  AllowedValues: [DEV,PROD]
  ConstraintDescription: Not a Valid Value
 ProcessifyKeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
 SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

#mappings
Mappings:
 InstanceMapping:
  DEV: 
   InstanceType: t2.nano
  PROD:
   InstanceType: t2.micro

#Resources
Resources:
 ProcessifyServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80 and SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref SSHLocation

 ProcessifyServerInstance:
  Type: "AWS::EC2::Instance"
  
  Properties:
   InstanceType: !FindInMap [InstanceMapping, !Ref 'ENV', InstanceType]
   ImageId: "ami-0e9089763828757e1"
   KeyName:
        Ref: ProcessifyKeyName
   SecurityGroups:
      - Ref: ProcessifyServerSecurityGroup
   UserData:
    Fn::Base64: |
     #!/bin/bash
     yum install update
     yum install docker -y
     docker -version
     docker info
     service docker start
     usermod -a -G docker geeks
     docker ps
     systemctl enable docker
     docker pull camunda/camunda-bpm-platform:latest
     docker run -d --name camunda -p 80:8080 camunda/camunda-bpm-platform:latest
                    

                        